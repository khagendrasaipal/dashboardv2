<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>DASHBOARD</title>
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>

<script src="http://dashboard.hmis.gov.np/js/jquery-2.2.3.min.js"></script> 
  <script src="http://dashboard.hmis.gov.np/js/jquery.min.js"></script>
  <script src="http://dashboard.hmis.gov.np/js/jquery-ui.min.js"></script>
<script src="http://dashboard.hmis.gov.np/js/bootstrap.min.js"></script> 

<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/highcharts-3d.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>

  <script
  src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js">
</script>
<style>
	.lbl{
		font-size:27px;
	}
	.dta{
		font-size: 20px;
		font-weight:bold;
	}
</style>

<!-- Demo styles -->
<style>
body {
	background: #eee;
	font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
	font-size: 14px;
	color: #000;
	margin: 0;
	padding: 0;
}

.swiper {
	width: 100%;
	height: 100%;
}

.swiper-slide {
	text-align: center;
	font-size: 18px;
	background: #fff;
	/* Center slide text vertically */
	display: -webkit-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	-webkit-justify-content: center;
	justify-content: center;
	-webkit-box-align: center;
	-ms-flex-align: center;
	-webkit-align-items: center;
	align-items: center;
}

.swiper-slide img {
	display: block;
	width: 100%;
	height: 100%;
	object-fit: cover;
}

.swiper {
	margin-left: auto;
	margin-right: auto;
}

 
         table {
    border-collapse: collapse;
    width: 100%;
    font-family: Arial, sans-serif;
  }
  
  th, td {
    border: 1px solid #dddddd;
    padding: 8px;
    text-align: left;
  }
</style>


<style type="text/css">
.marquee {
	width: 100%;
	background-color: #2460b9;
	color: white;
	white-space: nowrap;
	overflow: hidden;
	box-sizing: border-box;
}

.marquee p {
	display: inline-block;
	padding-left: 100%;
	animation: marquee 60s linear infinite;
	margin-bottom: 0rem;
}

.marquee p p {
	display: inline-block;
	padding-left: 100%;
	animation: marquee 60s linear infinite;
	margin-bottom: 0rem;
}

@
keyframes marquee { 0% {
	transform: translate(0, 0);
}

100


%
{
transform


:


translate
(


-100
%
,
0


)
;


}
}
tr {
	line-height: 0.5;
}

.hide {
	display: none !important;
}
</style>


<style type="text/css">  
.marquee {
    width: 100%;
  background-color: #2460b9;
  color: white;
    white-space: nowrap;
    overflow: hidden;
    box-sizing: border-box;
}
.marquee p {
    display: inline-block;
    padding-left: 100%;
    animation: marquee 60s linear infinite;
    margin-bottom:0rem;
}
@keyframes marquee {
    0%   { transform: translate(0, 0); }
    100% { transform: translate(-100%, 0); }
}
tr{
line-height: 0.5;
}

.hide{
  display: none !important;
}
</style>
<script>

setInterval(() => {
   var d = new Date();
   var time = d.toLocaleTimeString();
   var t=convertToNepali(time);
  
    document.getElementById('time').innerHTML = t;
  }, 1000);
	function convertToNepali(engNum){
		var nepNum = ["०", "१", "२", "३", "४", "५", "६", "७", "८", "९"];
		var tnum = "";
		var engNums = engNum.split("");
		for(const i of engNums){
			if(nepNum[i] !== undefined){
				tnum +=nepNum[i];
			}else{
				tnum +=i;
			}
		}
		return tnum;
	}
</script>
</head>

<body style="background-color: rgba(0, 0, 0, 0.05)">

	<div class="row container-fluid" style="justify-content: center;margin-top: 10px;margin-left: 10px;">

		<div class="col-md-2" style="padding: 0 0 0 5%;">
			<div style="width: 100%">
				<div style="float: left">
					<img src="https://openweathermap.org/img/w/{{icon}}.png"
						style="height: 3.7pc; width: 3.7pc;">
				</div>

				<div style="margin-left: 10px; margin-top: 12px;">
					<b><span class="spc" style="font-size: 25px;"> {{temp}} &deg;C </span></b>
					
				</div>
				<b><span  style="font-size: 20px;"> {{dates}} </span></b>
			</div>


		</div>


		<div class="col-md-2" style="padding-left: 9px">
			<div style="width: 100%">
				<div style="float: left; margin-top: -12px;">
					<i class="bi bi-people" style="font-size: 3.7pc; color: #ff00008c;"></i>
				</div>

				<div style="margin-left: 8px; margin-top: 12px;">
					<b><span class="spc" style="font-size: 25px;"> {{population}} <br>
						जनसंख्या
					</span></b>
				</div>
			</div>


		</div>


		<div class="col-md-4 text-center" onclick= "toggleFullscreen()">
			<div style="width: 100%">
				<img src="../Emblem_of_Nepal_2020.svg" style="width: 60px;">
				<h3>{{orgname}}</h3>
				<h5>{{pname}},नेपाल </h5>
			</div>


		</div>

		<div class="col-md-2">
			<div style="width: 100%">
				<div style="float: left; margin-top: -12px;">
					<i class="bi bi-hospital"
						style="font-size: 3.7pc; color: #7d21cac7;"></i>
				</div>

				<div style="margin-left: 80px; margin-top: 12px;">
					<b><span class="spc" style="font-size: 25px;"> {{hf}} <br> स्वास्थ्य संस्था 

					</span></b>
				</div>
			</div>


		</div>

		<div class="col-md-2">
			<div style="width: 100%">
				<div style="float: left; margin-top: -12px;">
					<i class="bi bi-building"
						style="font-size: 3.7pc; color: #1097cca6;"></i>
				</div>

				<div style="margin-left: 80px; margin-top: 12px;">
					<b><span class="spc" style="font-size: 25px;"> {{household}} <br>
						घरधुरी 
					</span></b>
				</div>
			</div>


		</div>

	</div>



	<!-- Scroll Part Start -->
	<div class="row" style="background: #2460b9;">
		<div class="col-md-2" style="background-color: #ca010e;">
			<h4 id="time" style="color: whitesmoke; padding-top: 7px; padding-left: 33px; font-weight: bold;">जानकारी 
				</h4>
		</div>
		<div class="col-md-10">
			<div class="marquee">
				<p style="font-size: xx-large;">{{update | raw }}</p>
			</div>
		</div>
	</div>
	<!-- Scroll Part End -->



	<!-- Swiper -->

    <div class="row">

        <div class="col-md-12 text-center">
         
        <div class="col-md-12">
         <!--  <img id="changeImage" 
      
          src="https://images.unsplash.com/photo-1646282014691-620f9af448a8?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1170&q=80" 
          style="max-height:625px;
          max-width: 100%;" class="d-block w-100" alt="..."> -->
          <figure class="highcharts-figure">
           <div id="slideshow" class="row text-center">
            
              
              
             <div class="card-body" >
              <table class="table" style="height: 97%">
                <thead>
                  <tr>
                    <th scope="col">वडा</th>
                    <th scope="col">कुल स्वास्थ्य संस्था</th>
                    <th scope="col">सरकारी  स्वास्थ्य संस्था</th>
                     <th scope="col">गैरसरकारी स्वास्थ्य संस्था </th>
                     <th scope="col">नर्मल बेड </th>
                      <th scope="col">आइ सि यु बेड </th>
                    <th scope="col">भेन्टिलेटर बेड </th>
                  </tr>
                </thead>
                <tbody>
                 
                {% for hf in hfcount %}
             
                 <tr>
                      
                      <td>{{ hf.get("ward")}}</td>				
                      <td>{{ hf.get("total")}}</td>
                      <td>{{ hf.get("gov")}} </td>
                      <td>{{ hf.get("ngov")}}</td>
                      <td>{{ hf.get("normal")}}  </td>
                      <td>{{ hf.get("icu")}}  </td>
                      <td>{{ hf.get("vent")}} </td>
                   
                      
              </tr> 
              {% endfor %} 
                </tbody>
              </table></div>
              
               {% for i in acard %}
                    <div class="col-md-12 slider-item" data-duration="15000">
                        <div class="card-body equalheight2">
                            <h3><i class="fas fa-info-square"></i> {{i.get("title")}}</h3>
                             {{i.get("content") | raw }}  
                        </div>
                    </div>
                     {% endfor %}
                     
                       <div class="col-md-12 slider-item" data-duration="15000">
                        <div class="cards">
                            <h3><i class="fas fa-map-marked"></i> सम्पर्क विवरण</h3>
                            <div class="card-content">
                                {{contact | raw}}
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-md-12 slider-item" data-duration="15000">
                        <div class="cards">
                           <h3><i class="fas fa-map-marked"></i> वडाहरुको सम्पर्क विवरण</h3>
                            <div class="card-content">
                                {{wc | raw}}
                            </div>
                        </div>
                    </div>
                    
                     {% for i in image %}
       <div class="col-md-12 slider-item"   data-duration="{{i.get("time")*1000}}">
           <h2 style="color: #2460b9;">{{i.get("title")}}</h2>
            <img class="img-fluid"   src="{{baseUrl}}/{{i.get("image")}}">
        
       </div>
         
            {% endfor %}

             
                     
             {% for p in dchart %}
             
              <div class="col-md-12 col-xs-12" id="cc{{ p.get("id")}}"> </div>
              
              
              {% endfor %}
               
                
           
            
             {% for i in image %}
       <div class="col-md-12" >
          <div class="card">
            <div class="card-body">   <img width="80%" height="700" src="{{baseUrl}}/{{i.get("image")}}"></div>
          </div>
       </div>
         
            {% endfor %}
           
            
             
            
          
           
           </figure>
      
         
      
          <!-- Couldn't figure out the exact calculations but max-height: calc(100vh - 35%) will give tentative height that we need, but damages other magiins of screen-->
      
          <!-- Also, without this part ->(class="d-block w-100" alt="...") the image will not fully cover the screen -->
      
        </div>
      
      </div>
	

	<!-- Swiper JS -->
	

	<!-- Initialize Swiper -->
<!-- 	<script>
        var swiper = new Swiper(".mySwiper", {
          slidesPerView: 1,
          spaceBetween: 30,
          loop: true,
          pagination: {
            el: ".swiper-pagination",
            clickable: true,
          },
          navigation: {
            nextEl: ".swiper-button-next",
            prevEl: ".swiper-button-prev",
          },
        });
      </script> -->
</body>


</html>

  
<style type="text/css">  
.marquee {
    width: 100%;
  background-color: #2460b9;
  color: white;
    white-space: nowrap;
    overflow: hidden;
    box-sizing: border-box;
}
.marquee p {
    display: inline-block;
    padding-left: 100%;
    animation: marquee 60s linear infinite;
    margin-bottom:0rem;
    font-size: xx-large;
}
@keyframes marquee {
    0%   { transform: translate(0, 0); }
    100% { transform: translate(-100%, 0); }
}
tr{
line-height: 0.5;
}

.hide{
  display: none !important;
}
</style>
  
  
  
  
  
  
<script type="text/javascript">

   
   function toggleFullscreen() {
  if (!document.fullscreenElement &&    // alternative standard method
      !document.mozFullScreenElement && 
      !document.webkitFullscreenElement && 
      !document.msFullscreenElement ) {  // current working methods
    if (document.documentElement.requestFullscreen) {
      document.documentElement.requestFullscreen();
    } else if (document.documentElement.msRequestFullscreen) {
      document.documentElement.msRequestFullscreen();
    } else if (document.documentElement.mozRequestFullScreen) {
      document.documentElement.mozRequestFullScreen();
    } else if (document.documentElement.webkitRequestFullscreen) {
      document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);
    }
  } else {
    if (document.exitFullscreen) {
      document.exitFullscreen();
    } else if (document.msExitFullscreen) {
      document.msExitFullscreen();
    } else if (document.mozCancelFullScreen) {
      document.mozCancelFullScreen();
    } else if (document.webkitExitFullscreen) {
      document.webkitExitFullscreen();
    }
  }
}
    
   
  
    var count = 1
   //  setInterval(changeChartHere, 5000);
  
  $("#slideshow > div:gt(0)").hide();
  
  setInterval(function() {
    $('#slideshow > div:first')
      .fadeOut(300)
      .next()
      .fadeIn(300)
      .end()
      .appendTo('#slideshow');
  }, 15000);
  
  </script>
  
  
  
  <style type="text/css">
    
    .col, .col-1, .col-10, .col-11, .col-12, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-auto, .col-lg, .col-lg-1, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-auto, .col-md, .col-md-1, .col-md-10, .col-md-11, .col-md-12, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-auto, .col-sm, .col-sm-1, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-auto, .col-xl, .col-xl-1, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-auto {
    padding-left: 0;
  }
  
  </style>
  
  
  <script type="text/javascript">
    
    // chart dummy datas
  
    
  
  
    var baseUrl="http://dashboard.hmis.gov.np";
    // var baseUrl="http://localhost:8083"
    // var months=["Shrawn","Bhadra","Ashoj","Kartik","Mangsir","Poush","Magh","Falgun","Chaitra","Baishakh","Jestha","Ashar"];
    var months=["श्रावण ","भदौ","असोज ","कार्तिक","मंसिर ","पौष","माघ","फाल्गुण","चैत्र","वैशाख","ज्येष्ठ ","असार"];
    var screenWidth = window.screen.width;
  
    
    
      $.ajax({
  
          method: 'get',
         url: baseUrl+"/dashboard/getConfig?orgid="+{{orgid}}+"&cid=1&dt=1",
          success: function(response) {
             var a=response.data;
              for(var i in a){
              var m = [];
              var y = [];
              var d=[];
              
                   var f={"mindicator":[],"myear":[]};
      var inds = a[i].mindicator.split(",");
        for(var k of inds){
        m.push(k);
          f.mindicator.push(k);
        }
        var yrs = a[i].myear.split(",");
        for(var j of yrs){
           y.push(parseInt(j));
          f.myear.push(parseInt(j));
        }
         d.push({
              mindicator: m, 
              myear:  y
          });
       var tabid="cc"+a[i].id;
        var ctype=a[i].charttype;
        getCharts(tabid,ctype,inds,yrs,d[0],"f");
       
                  
              }
      
  
          },
          fail: function() {
              alert("failed");
          }
      });
      
       $.ajax({
  
          method: 'get',
         url: baseUrl+"/dashboard/getConfig?orgid="+{{orgid}}+"&cid=0&dt=1",
          success: function(response) {
             var a=response.data;
              for(var i in a){
              var m = [];
              var y = [];
              var d=[];
              
                   var f={"mindicator":[],"myear":[]};
      var inds = a[i].mindicator.split(",");
      if (inds.length > 1) {
    inds = inds.map(element => `"${element}"`);
}
        for(var k of inds){
        m.push(k);
          f.mindicator.push(k);
        }
        var yrs = a[i].myear.split(",");
        for(var j of yrs){
           y.push(parseInt(j));
          f.myear.push(parseInt(j));
        }
         d.push({
              mindicator: m, 
              myear:  y
          });
       var tabid="cc"+a[i].id;
        var ctype=a[i].charttype;
        getChartsHmis(tabid,ctype,inds,yrs,d[0],"h");
       
                  
              }
      
  
          },
          fail: function() {
              alert("failed");
          }
      });
      
     function getCharts(tabid,ctype,inds,yrs,dat,type){
       $.ajax({
        
                  method: "POST",
                  url: baseUrl+"/dashboard/get-ind-data?orgid="+{{orgid}}+"&fcharttype="+ctype+"&type="+type+"&findicator="+inds+"&fyear="+yrs,
                  data: dat,
                  success: function (resp) {
                  if(typeof resp.data=="string"){
                         $("#"+tabid).html(resp.data);
                         
                     }else{
                    
                      
           Highcharts.chart(tabid, {
  
      chart: {
            type: ctype
        },
        title: resp.data[0].title,
        subtitle: resp.data[0].subtitle,
        xAxis: {
            categories: resp.data[0].cats,
            crosshair: true
        },
        yAxis: {
            min: 0,
            title: {
                text: 'Nrs.'
            }
        },
        tooltip: {
            headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
            pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                '<td style="padding:0"><b>{point.y:.1f} mm</b></td></tr>',
            footerFormat: '</table>',
            shared: true,
            useHTML: true
        },
       plotOptions: {
          
            column: {
                pointPadding: 0.2,
                borderWidth: 0,
                dataLabels: {
                  enabled: true
                },
            }
        },
      series: resp.data[0].series
  });
                     
                     }
                      
  
                  },
                  fail: function () {
  
                      alert("failed");
                  }
              });
          
      }
      
      function getChartsHmis(tabid,ctype,inds,yrs,dat,type){
       $.ajax({
        
                  method: "POST",
                  url: baseUrl+"/dashboard/get-ind-data?orgid="+{{orgid}}+"&charttype="+ctype+"&type="+type+"&mindicator="+inds+"&myear="+yrs,
                  data: dat,
                  success: function (resp) {
                  if(typeof resp.data=="string"){
                     
                         $("#"+tabid).html(resp.data);
                         
                     }else{
                    
                      
           Highcharts.chart(tabid, {
  
      chart: {
            type: ctype
        },
        title: resp.data[0].title,
        subtitle: resp.data[0].subtitle,
        xAxis: {
            categories: resp.data[0].cats,
            crosshair: true
        },
        yAxis: {
            min: 0,
            title: {
                text: 'Value'
            }
        },
        tooltip: {
            headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
            pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                '<td style="padding:0"><b>{point.y:.1f} mm</b></td></tr>',
            footerFormat: '</table>',
            shared: true,
            useHTML: true
        },
       plotOptions: {
          series: {
            colorByPoint: true
        },
            column: {
                pointPadding: 0.2,
                borderWidth: 0,
                dataLabels: {
                  enabled: true
                },
            }
        },
      series: resp.data[0].series
  });
                     
                     }
                      
  
                  },
                  fail: function () {
  
                      alert("failed");
                  }
              });
          
      }
    
    
    
    
    
     $.ajax({
  
          method: 'get',
          url: baseUrl+"/getDashboard?orgid="+{{orgid}},
          success: function(response) {
           var a=response.data;
           var htm="";
          for(var i in a){
           htm+="<div id='"+a[i].indicator+"'></div>";
          
          // $("#slideshow").html(htm);
           
              if(a[i].chart_type=="Line Chart"){
              
              Highcharts.chart(a[i].indicator, {
      chart: {
          type: 'line',
          height: '500px'
         
      },
      title: {
          text: a[i].inamenp
      },
      subtitle: {
          text: a[i].inameen
      },
      xAxis: {
          categories: months,
          crosshair: true
      },
      yAxis: {
          title: {
              text: 'Value'
          }
      },
      plotOptions: {
          line: {
              dataLabels: {
                  enabled: true
              },
              enableMouseTracking: false
          }
      },
      series: [{
          name:a[i].inamenp +" "+ a[i].fys,
          data: a[i].data.map(Number)
      }]
  });
              }
              
              if(a[i].chart_type=="Pie Chart"){
              var ind=a[i].indicator;
              var nam=a[i].inamenp;
              var series = [{
                      name: "Total",
                      data: []
                  }];
              var piedata=a[i].data.map(Number);
              for(var p in piedata){
                  var pies = {name:months[p],y:piedata[p]};
                  
                  series[0].data.push(pies);
              }
              
              Highcharts.chart(ind, {
      chart: {
         type: 'pie',
          options3d: {
              enabled: true,
              alpha: 45,
              beta: 0
          }
      },
      title: {
          text: nam
      },
      subtitle: {
          text: a[i].inameen+"("+a[i].fys+")"
      },
      tooltip: {
          pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
      },
      accessibility: {
          point: {
              valueSuffix: '%'
          }
      },
      plotOptions: {
          pie: {
              allowPointSelect: true,
              cursor: 'pointer',
               depth: 35,
              dataLabels: {
                  enabled: true,
                  format: '<b>{point.name}</b>: {point.percentage:.1f} %'
              }
          }
      },
      series: series
  });
              
              }
              
              
              if(a[i].chart_type=="Bar Chart"){
              
              Highcharts.chart(a[i].indicator, {
      chart: {
          type: 'column',
          height: '500px',
          options3d: {
              enabled: true,
              alpha: 0,
              beta: 0,
              depth: 70
          }
          
      },
      title: {
          text: a[i].inamenp
      },
      subtitle: {
          text: a[i].inameen
      },
      xAxis: {
          categories: months,
          crosshair: true,
          labels: {
              skew3d: true,
              style: {
                  fontSize: '16px'
              }
          }
      },
      yAxis: {
          min: 0,
          title: {
              text: 'Value'
          }
      },
      tooltip: {
          headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
          pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
              '<td style="padding:0"><b>{point.y:.1f} mm</b></td></tr>',
          footerFormat: '</table>',
          shared: true,
          useHTML: true
      },
     plotOptions: {
                                      line: {
                                        dataLabels: {
                                          enabled: true
                                        },
                                        enableMouseTracking: true
                                      },
                                      column: {
                                       depth: 50,
                                        dataLabels: {
                                          enabled: true
                                        },
                                        enableMouseTracking: true
                                      },
                                      bar: {
                                        dataLabels: {
                                          enabled: true
                                        },
                                        enableMouseTracking: true
                                      },
                                      areaspline: {
                                        dataLabels: {
                                          enabled: true
                                        },
                                        enableMouseTracking: true
                                      }
  
                                    },
      series: [{
          name: a[i].inamenp +" "+ a[i].fys,
          data: a[i].data.map(Number)
  
      }]
  });
  
  
  
              
    }
          }
          },
          fail: function() {
              alert("failed");
          }
      });
      
        setInterval(function() {
                 
                  var purl = '{{baseUrl}}';
	var xh = $.ajax({
			url:purl,
			method:'get',
			
		});
	xh.done(()=>{ window.location.reload();});
                }, 900000); 
                

function logOpen(){
var screenWidth = window.screen.width;
var info=navigator.userAgent;

if (screenWidth > 120) {
	var purl = '{{baseUrl}}/log/dashboard';
	var xh = $.ajax({
			url:purl,
			method:'post',
			data:{orgid:'{{orgid}}',ss:screenWidth,infos:info}
		});
	xh.done(()=>{/*logged*/});
	}
}
logOpen();
setInterval(()=>{
	logOpen();
}, 1500000);
  
  
  </script>
  

