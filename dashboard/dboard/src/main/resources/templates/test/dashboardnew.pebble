<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8" />
<title>DASHBOARD</title>

<link rel="stylesheet"
	href="https://unpkg.com/swiper/swiper-bundle.min.css" />
<link rel="stylesheet"
	href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css"
	integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
	crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"
	integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="
	crossorigin="anonymous"></script>
<!--<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>-->
<script
	src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js"
	integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
	crossorigin="anonymous"></script>
<script
	src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js"
	integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
	crossorigin="anonymous"></script>

<link rel="stylesheet"
	href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.3/font/bootstrap-icons.css">

<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/highcharts-3d.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>

<script
	src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js">
</script>

<!-- Demo styles -->
<style>
html, body {
	position: relative;
	height: 100%;
}

body {
	background: #eee;
	font-family: Helvetica Neue, Helvetica, Arial, sans-serif;
	font-size: 14px;
	color: #000;
	margin: 0;
	padding: 0;
}

.swiper {
	width: 100%;
	height: 100%;
}

.swiper-slide {
	text-align: center;
	font-size: 18px;
	background: #fff;
	/* Center slide text vertically */
	display: -webkit-box;
	display: -ms-flexbox;
	display: -webkit-flex;
	display: flex;
	-webkit-box-pack: center;
	-ms-flex-pack: center;
	-webkit-justify-content: center;
	justify-content: center;
	-webkit-box-align: center;
	-ms-flex-align: center;
	-webkit-align-items: center;
	align-items: center;
}

.swiper-slide img {
	display: block;
	width: 100%;
	height: 100%;
	object-fit: cover;
}

.swiper {
	margin-left: auto;
	margin-right: auto;
}
</style>


<style type="text/css">
.marquee {
	width: 100%;
	background-color: #2460b9;
	color: white;
	white-space: nowrap;
	overflow: hidden;
	box-sizing: border-box;
}

.marquee p {
	display: inline-block;
	padding-left: 100%;
	animation: marquee 60s linear infinite;
	margin-bottom: 0rem;
}

@
keyframes marquee { 0% {
	transform: translate(0, 0);
}

100


%
{
transform


:


translate
(


-100
%
,
0


)
;


}
}
tr {
	line-height: 0.5;
}

.hide {
	display: none !important;
}
</style>


<style type="text/css">  
.marquee {
    width: 100%;
  background-color: #2460b9;
  color: white;
    white-space: nowrap;
    overflow: hidden;
    box-sizing: border-box;
}
.marquee p {
    display: inline-block;
    padding-left: 100%;
    animation: marquee 60s linear infinite;
    margin-bottom:0rem;
}
@keyframes marquee {
    0%   { transform: translate(0, 0); }
    100% { transform: translate(-100%, 0); }
}
tr{
line-height: 0.5;
}

.hide{
  display: none !important;
}
</style>

</head>

<body>

	<div class="row">

		<div class="col-md-2" style="padding: 0 0 0 5%;">
			<div style="width: 100%">
				<div style="float: left">
					<img src="https://openweathermap.org/img/w/{{icon}}.png"
						style="height: 3.7pc; width: 3.7pc;">
				</div>

				<div style="margin-left: 80px; margin-top: 12px;">
					<b><span class="spc" style="font-size: 25px;"> {{temp}} &deg;C </span></b>
				</div>
			</div>


		</div>


		<div class="col-md-2" style="padding-left: 90px">
			<div style="width: 100%">
				<div style="float: left; margin-top: -12px;">
					<i class="bi bi-people" style="font-size: 3.7pc; color: #ff00008c;"></i>
				</div>

				<div style="margin-left: 80px; margin-top: 12px;">
					<b><span class="spc" style="font-size: 25px;"> {{census.get("population")}} <br>
						जनसंख्या
					</span></b>
				</div>
			</div>


		</div>


		<div class="col-md-4 text-center">
			<div style="width: 100%">
				<img src="../Emblem_of_Nepal_2020.svg" style="width: 60px;">
				<h3>{{orgname}}</h3>
				<h5>{{pname}},नेपाल </h5>
			</div>


		</div>

		<div class="col-md-2">
			<div style="width: 100%">
				<div style="float: left; margin-top: -12px;">
					<i class="bi bi-hospital"
						style="font-size: 3.7pc; color: #7d21cac7;"></i>
				</div>

				<div style="margin-left: 80px; margin-top: 12px;">
					<b><span class="spc" style="font-size: 25px;"> {{hf}} <br> स्वास्थ्य संस्था 

					</span></b>
				</div>
			</div>


		</div>

		<div class="col-md-2">
			<div style="width: 100%">
				<div style="float: left; margin-top: -12px;">
					<i class="bi bi-building"
						style="font-size: 3.7pc; color: #1097cca6;"></i>
				</div>

				<div style="margin-left: 80px; margin-top: 12px;">
					<b><span class="spc" style="font-size: 25px;"> {{census.get("total_household")}} <br>
						घरधुरी 
					</span></b>
				</div>
			</div>


		</div>

	</div>



	<!-- Scroll Part Start -->
	<div class="row" style="background: #2460b9;">
		<div class="col-md-2" style="background-color: #ca010e;">
			<h5
				style="color: whitesmoke; padding-top: 7px; padding-left: 33px; font-weight: bold;"><iframe scrolling="no" border="0" frameborder="0" marginwidth="0" marginheight="0" allowtransparency="true" src="https://www.ashesh.com.np/linknepali-time.php?time_only=no&font_color=ffffff&aj_time=yes&font_size=18&line_brake=0&bikram_sambat=0&nst=no&api=810177m176" width="307" height="22"></iframe>
				</h5>
		</div>
		<div class="col-md-10">
			<div class="marquee">
				<p style="font-size: xx-large;">{{update}}</p>
			</div>
		</div>
	</div>
	<!-- Scroll Part End -->



	<!-- Swiper -->



	<div class="swiper mySwiper">
		<div class="swiper-wrapper">
			<div class="swiper-slide align-middle" style="margin-top:0px";" data-swiper-autoplay="20000">

	<video width="1000" height="800"  autoplay="autoplay" controls muted >
  <source src="{{baseUrl}}/{{video}}" type="video/mp4">
  <source src="{{baseUrl}}/{{video}}" type="video/ogg">

</video>

			</div>

			<div class="swiper-slide align-middle" data-swiper-autoplay="5000">
				<table class="table" style="height: 97%">
					<thead>
						<tr>
							<th scope="col">वडा</th>
							<th scope="col">कुल स्वास्थ्य संस्था</th>
							<th scope="col">सरकारी स्वास्थ्य संस्था</th>
							<th scope="col">गैरसरकारी स्वास्थ्य संस्था</th>
							<th scope="col">नर्मल बेड</th>
							<th scope="col">आइ सि यु बेड</th>
							<th scope="col">भेन्टिलेटर बेड</th>
						</tr>
					</thead>
					<tbody>

						{% for hf in hfcount %}

						<tr>

							<td>{{ hf.get("ward")}}</td>
							<td>{{ hf.get("total")}}</td>
							<td>{{ hf.get("gov")}}</td>
							<td>{{ hf.get("ngov")}}</td>
							<td>{{ hf.get("normal")}}</td>
							<td>{{ hf.get("icu")}}</td>
							<td>{{ hf.get("vent")}}</td>


						</tr>
						{% endfor %}
					</tbody>
				</table>
			</div>
			
			{% for p in chart %}
			
			<div class="swiper-slide "  style="margin-top:10px" id="{{ p.get("indicator")}}" data-swiper-autoplay="{{p.get("time")*1000}}">
			</div>
			
			{% endfor %} 
			
			{% for i in image %}
			<div class="swiper-slide align-middle" style="height: calc(85vh) !important;" data-swiper-autoplay="{{i.get("time")*1000}}">

				<img src="{{baseUrl}}/{{i.get("image")}}" width="80%" height="700">

			</div>

			{% endfor %}
			
		  <div class="col-md-12 col-xs-12 swiper-slide align-middle" id="cont"> </div>
          <div class="col-md-12 col-xs-12 swiper-slide align-middle" id="dash1"> </div>
          <div class="col-md-12 col-xs-12 swiper-slide align-middle" id="dash2"> </div>
          <div class="col-md-12 col-xs-12 swiper-slide align-middle" id="dash3"> </div>
		</div>
		<!-- <div class="swiper-button-next"></div>
        <div class="swiper-button-prev"></div> -->
		<div class="swiper-pagination"></div>
	</div>
	<canvas id="meowChart" class="d-block w-100"
		style="padding: 20px; max-height: 630px"></canvas>

	<canvas id="ourChart" class="d-block w-100 hide"
		style="padding: 20px; max-height: 630px; width: 700px;"></canvas>

	<canvas id="myChart" class="d-block w-100 hide"
		style="padding: 20px; max-height: 630px; width: 700px"></canvas>

	<!-- Swiper JS -->
	<script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>

	<!-- Initialize Swiper -->
<!-- 	<script>
        var swiper = new Swiper(".mySwiper", {
          slidesPerView: 1,
          spaceBetween: 30,
          loop: true,
          pagination: {
            el: ".swiper-pagination",
            clickable: true,
          },
          navigation: {
            nextEl: ".swiper-button-next",
            prevEl: ".swiper-button-prev",
          },
        });
      </script> -->
</body>
<script type="text/javascript">



  function changeChartHere(){
    // alert("1.5 seconds");
    var element = document.getElementById("meowChart");
      var elem = document.getElementById("ourChart")
      var ele = document.getElementById("myChart");
    if (count == 1){
      element.classList.add('hide');
      ele.classList.remove('hide');
      count ++;
      // alert(count)
    }
    else if(count==2){
      // element.classList.add('hide');
      ele.classList.add('hide');
      elem.classList.remove('hide')
      count ++;
      // alert(count)
    }
    else {
       elem.classList.add('hide');
       element.classList.remove('hide');
       count = 1;
       // alert(count)
    }
  }

// Image Change in 15 seconds

  
 

  var count = 1
 //  setInterval(changeChartHere, 5000);

//("#slideshow > div:gt(0)").hide();

/*setInterval(function() {
  $('#slideshow > div:first')
    .fadeOut(300)
    .next()
    .fadeIn(300)
    .end()
    .appendTo('#slideshow');
}, 15000);*/

</script>



<style type="text/css">
.col, .col-1, .col-10, .col-11, .col-12, .col-2, .col-3, .col-4, .col-5,
	.col-6, .col-7, .col-8, .col-9, .col-auto, .col-lg, .col-lg-1,
	.col-lg-10, .col-lg-11, .col-lg-12, .col-lg-2, .col-lg-3, .col-lg-4,
	.col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-auto,
	.col-md, .col-md-1, .col-md-10, .col-md-11, .col-md-12, .col-md-2,
	.col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8,
	.col-md-9, .col-md-auto, .col-sm, .col-sm-1, .col-sm-10, .col-sm-11,
	.col-sm-12, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6,
	.col-sm-7, .col-sm-8, .col-sm-9, .col-sm-auto, .col-xl, .col-xl-1,
	.col-xl-10, .col-xl-11, .col-xl-12, .col-xl-2, .col-xl-3, .col-xl-4,
	.col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-auto {
	padding-left: 0;
}
</style>
<script type="text/javascript">
      var mySwiper = new Swiper ('.mySwiper', 
      {
        speed:1000,
        direction: 'horizontal',
        autoHeight:true,
        navigation: 
        {
          nextEl: '.swiper-button-next',
          prevEl: '.swiper-button-prev',
        },
        pagination: 
        {
          el: '.swiper-pagination',
          dynamicBullets: true,
        },
        zoom: true,
        keyboard: 
        {
          enabled: true,
          onlyInViewport: false,
        },
        mousewheel: 
        {
          invert: true,
        },
        autoplay: 
        {
          delay: 2000,
        },
        loop: true,
      }); 


    </script>

<script type="text/javascript">
  
  // chart dummy datas

    var xValues = [100,200,300,400,500,600,700,800,900,1000];

  


  var xValues = ["Italy", "France", "Spain", "USA", "Argentina"];
  var yValues = [55, 49, 44, 24, 15];
  var barColors = [
  "#b91d47",
  "#00aba9",
  "#2b5797",
  "#e8c3b9",
  "#1e7145"
  ];

  



    const ctx = document.getElementById('myChart').getContext('2d');
  const myChart = new Chart(ctx, {
    type: 'bar',
    data: {
      labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],
      datasets: [{
        label: '# of Votes',
        data: [12, 19, 3, 5, 16, 3],
        backgroundColor: [
        'rgba(255, 99, 132, 0.2)',
        'rgba(54, 162, 235, 0.2)',
        'rgba(255, 206, 86, 0.2)',
        'rgba(75, 192, 192, 0.2)',
        'rgba(153, 102, 255, 0.2)',
        'rgba(255, 159, 64, 0.2)'
        ],
        borderColor: [
        'rgba(255, 99, 132, 1)',
        'rgba(54, 162, 235, 1)',
        'rgba(255, 206, 86, 1)',
        'rgba(75, 192, 192, 1)',
        'rgba(153, 102, 255, 1)',
        'rgba(255, 159, 64, 1)'
        ],
        borderWidth: 1
      }]
    },
    options: {
      scales: {
        y: {
          beginAtZero: true
        }
      }
    }
  });
  var baseUrl="http://dashboard.hmis.gov.np";
  // var baseUrl="http://localhost:8083"
  // var months=["Shrawn","Bhadra","Ashoj","Kartik","Mangsir","Poush","Magh","Falgun","Chaitra","Baishakh","Jestha","Ashar"];
  var months=["श्रावण ","भदौ","असोज ","कार्तिक","मंसिर ","पौष","माघ","फाल्गुण","चैत्र","वैशाख","ज्येष्ठ ","असार"];
  
  $.ajax({

        method: 'get',
       url: baseUrl+"/getDashboardSutra?orgid="+{{orgid}}+"&pid=100&repType=broad-sector&fy=2078",
        success: function(response) {
          var a=JSON.parse(response);
         // console.log(a);
			var tbudget = 0;
			var texp = 0;
            var labels = [];
            var series = [{
                    name: "Budget",
                    data: []
                }, {
                    name: "Expenditure",
                    data: []
                }];
               // console.log(response);
                
                for (var i in a) {
                        labels.push(a[i].namenp);
                        series[0].data.push(a[i].totalbudget);
                        series[1].data.push(a[i].expenditure);
						tbudget += a[i].totalbudget;
						texp += a[i].expenditure;
                    }
               //     console.log(series);
	var htm='<div class="col-md-12 col-xs-12" id="s1"> </div>';
	Highcharts.chart('s1', {

    chart: {
          type: 'column'
      },
      title: {
          text: ' Broad Sector Budget and Expenditure'
      },
      subtitle: {
          text: 'Source: Sutra'
      },
      xAxis: {
          categories: labels,
          crosshair: true
      },
      yAxis: {
          min: 0,
          title: {
              text: 'Nrs.'
          }
      },
      tooltip: {
          headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
          pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
              '<td style="padding:0"><b>{point.y:.1f} mm</b></td></tr>',
          footerFormat: '</table>',
          shared: true,
          useHTML: true
      },
     plotOptions: {
        
          column: {
              pointPadding: 0.2,
              borderWidth: 0,
              dataLabels: {
                enabled: true
              },
          }
      },
    series: [{
          type:'column',
          name: series[0].name,
          data: series[0].data.slice(1).map(Number)
  
      }, {
          type:'column',
          name: series[1].name,
          data: series[1].data.slice(1).map(Number)
  
      }]
});
$(".highcharts-credits").html("Source: HMIS");
        },
        fail: function() {
            alert("failed");
        }
    });
    
    $.ajax({

        method: 'get',
       url: baseUrl+"/getDashboardSutra?orgid="+{{orgid}}+"&pid=101&repType=sector&fy=2078",
        success: function(response) {
          var a=JSON.parse(response);
         // console.log(a);
			var tbudget = 0;
			var texp = 0;
            var labels = [];
            var series = [{
                    name: "Budget",
                    data: []
                }, {
                    name: "Expenditure",
                    data: []
                }];
            //    console.log(response);
                
                for (var i in a) {
                        labels.push(a[i].namenp);
                        series[0].data.push(a[i].totalbudget);
                        series[1].data.push(a[i].expenditure);
						tbudget += a[i].totalbudget;
						texp += a[i].expenditure;
                    }
                  //  console.log(series);
	
	Highcharts.chart('s2', {

    chart: {
          type: 'column'
      },
      title: {
          text: 'Sectorial Budget & Expenditures'
      },
      subtitle: {
          text: 'Source: Sutra'
      },
      xAxis: {
          categories: labels,
          crosshair: true
      },
      yAxis: {
          min: 0,
          title: {
              text: 'Nrs.'
          }
      },
      tooltip: {
          headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
          pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
              '<td style="padding:0"><b>{point.y:.1f} mm</b></td></tr>',
          footerFormat: '</table>',
          shared: true,
          useHTML: true
      },
      plotOptions: {
        
          column: {
              pointPadding: 0.2,
              borderWidth: 0,
              dataLabels: {
                enabled: true
              },
          }
      },

    series: [{
          type:'column',
          name: series[0].name,
          data: series[0].data.slice(1).map(Number)
  
      }, {
          type:'column',
          name: series[1].name,
          data: series[1].data.slice(1).map(Number)
  
      }]
});
$(".highcharts-credits").html("Source: HMIS");
        },
        fail: function() {
            alert("failed");
        }
    });
   
   
   $.ajax({

        method: 'get',
       url: baseUrl+"/getDashboardSutra?orgid="+{{orgid}}+"&pid=102&repType=sectorial-activity&fy=2078",
        success: function(response) {
          var a=JSON.parse(response);
         // console.log(a);
			var tbudget = 0;
			var texp = 0;
            var labels = [];
            var series = [{
                    name: "Budget",
                    data: []
                }, {
                    name: "Expenditure",
                    data: []
                }];
               // console.log(response);
                
                for (var i in a) {
                        labels.push(a[i].namenp);
                        series[0].data.push(a[i].totalbudget);
                        series[1].data.push(a[i].expenditure);
						tbudget += a[i].totalbudget;
						texp += a[i].expenditure;
                    }
               //     console.log(series);
	
	Highcharts.chart('s3', {

    chart: {
          type: 'column'
      },
      title: {
          text: 'Sectorial Activity Budget & Expenditures'
      },
      subtitle: {
          text: 'Source: Sutra'
      },
      xAxis: {
          categories: labels,
          crosshair: true
      },
      yAxis: {
          min: 0,
          title: {
              text: 'Nrs.'
          }
      },
      tooltip: {
          headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
          pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
              '<td style="padding:0"><b>{point.y:.1f} mm</b></td></tr>',
          footerFormat: '</table>',
          shared: true,
          useHTML: true
      },
      plotOptions: {
        
          column: {
              pointPadding: 0.2,
              borderWidth: 0,
              dataLabels: {
                enabled: true
              },
          }
      },
    series: [{
          type:'column',
          name: series[0].name,
          data: series[0].data.slice(1).map(Number)
  
      }, {
          type:'column',
          name: series[1].name,
          data: series[1].data.slice(1).map(Number)
  
      }]
});
$(".highcharts-credits").html("Source: HMIS");
        },
        fail: function() {
            alert("failed");
        }
    });
   
  
   $.ajax({

        method: 'get',
       url: baseUrl+"/getDashboardCombine?orgid="+{{orgid}},
        success: function(response) {
           var a=response.data;
	var f=a[0];
	var m=a[1];
	
	Highcharts.chart('cont', {

    chart: {
        type: 'column'
    },

    title: {
        text: 'कुल नयाँ ओपीडी भ्रमण'+" "+ f.fys
    },

    xAxis: {
        categories: months
    },

    yAxis: {
        allowDecimals: false,
        min: 0,
        title: {
            text: 'Number of visit'
        }
    },

    legend: {
              align: 'right',
              x: -30,
              verticalAlign: 'top',
              y: 25,
              floating: true,
              backgroundColor: 'white',
              borderColor: '#CCC',
              borderWidth: 1,
              shadow: false
          },
          tooltip: {
              headerFormat: '<b>{point.x}</b><br/>',
              pointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'
          },
          plotOptions: {
              column: {
                  stacking: 'normal',
                  dataLabels: {
                      enabled: true
                  }
              }
          },

    series: [{
        name: f.inamenp,
        data: f.data.map(Number),
        stack: 'male'
    }, {
        name: m.inamenp,
        data: m.data.map(Number),
        stack: 'male'
    }]
});
$(".highcharts-credits").html("Source: HMIS");
        },
        fail: function() {
            alert("failed");
        }
    });
    
   
   
     $.ajax({

        method: 'get',
       url: baseUrl+"/getDashboardCombinePublic?orgid="+{{orgid}}+"&pid=1&tid=1",
        success: function(response) {
           var a=response.data;
	var f=a[0];
	var m=a[1];
	
	Highcharts.chart('dash1', {

    chart: {
        type: 'column'
    },

    title: {
        text: 'सुरक्षित मातृत्व कार्यक्रम - प्रसुति सेवा '+" "+ f.fys
    },

    xAxis: {
        categories: months
    },

    yAxis: {
        allowDecimals: false,
        min: 0,
        title: {
            text: 'Total number'
        }
    },

    legend: {
              align: 'right',
              x: -30,
              verticalAlign: 'top',
              y: 25,
              floating: true,
              backgroundColor: 'white',
              borderColor: '#CCC',
              borderWidth: 1,
              shadow: false
          },
          tooltip: {
              headerFormat: '<b>{point.x}</b><br/>',
              pointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'
          },
          plotOptions: {
              column: {
                  stacking: 'normal',
                  dataLabels: {
                      enabled: true
                  }
              }
          },

    series: [{
        name: f.inamenp,
        data: f.data.map(Number),
        stack: 'male'
    }, {
        name: m.inamenp,
        data: m.data.map(Number),
        stack: 'male'
    }]
});
$(".highcharts-credits").html("Source: HMIS");
        },
        fail: function() {
            alert("failed");
        }
    });
    
    
    
    $.ajax({

        method: 'get',
       url: baseUrl+"/getDashboardCombinePublic?orgid="+{{orgid}}+"&pid=1&tid=0",
        success: function(response) {
           var a=response.data;
	var f=a[0];
	var m=a[1];
	var s=a[2];
	
	Highcharts.chart('dash2', {

    chart: {
        type: 'column'
    },

    title: {
        text: 'सुरक्षित मातृत्व कार्यक्रम '+" "+ f.fys
    },

    xAxis: {
        categories: months
    },

    yAxis: {
        allowDecimals: false,
        min: 0,
        title: {
            text: 'Total number'
        }
    },

    legend: {
              align: 'right',
              x: -30,
              verticalAlign: 'top',
              y: 25,
              floating: true,
              backgroundColor: 'white',
              borderColor: '#CCC',
              borderWidth: 1,
              shadow: false
          },
          tooltip: {
              headerFormat: '<b>{point.x}</b><br/>',
              pointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'
          },
          plotOptions: {
              column: {
                  stacking: 'normal',
                  dataLabels: {
                      enabled: true
                  }
              }
          },

    series: [{
        name: f.inamenp,
        data: f.data.map(Number),
        stack: 'male'
    }, {
        name: m.inamenp,
        data: m.data.map(Number),
        stack: 'male'
    },{
        name: s.inamenp,
        data: s.data.map(Number),
        stack: 'male'
    }]
});
$(".highcharts-credits").html("Source: HMIS");
        },
        fail: function() {
            alert("failed");
        }
    });

	$.ajax({

        method: 'get',
       url: baseUrl+"/getDashboardCombinePublic?orgid="+{{orgid}}+"&pid=3&tid=0",
        success: function(response) {
           var a=response.data;
	var f=a[0];
	var m=a[1];
	var s=a[2];
	
	Highcharts.chart('dash3', {

    chart: {
        type: 'column'
    },

    title: {
        text: 'पोषण कार्यक्रम '+" "+ f.fys
    },

    xAxis: {
        categories: months
    },

    yAxis: {
        allowDecimals: false,
        min: 0,
        title: {
            text: 'Total number'
        }
    },

    legend: {
              align: 'right',
              x: -30,
              verticalAlign: 'top',
              y: 25,
              floating: true,
              backgroundColor: 'white',
              borderColor: '#CCC',
              borderWidth: 1,
              shadow: false
          },
          tooltip: {
              headerFormat: '<b>{point.x}</b><br/>',
              pointFormat: '{series.name}: {point.y}<br/>Total: {point.stackTotal}'
          },
          plotOptions: {
              column: {
                  stacking: 'normal',
                  dataLabels: {
                      enabled: true
                  }
              }
          },

    series: [{
        name: f.inamenp,
        data: f.data.map(Number),
        stack: 'male'
    }, {
        name: m.inamenp,
        data: m.data.map(Number),
        stack: 'male'
    },{
        name: s.inamenp,
        data: s.data.map(Number),
        stack: 'male'
    }]
});
$(".highcharts-credits").html("Source: HMIS");
        },
        fail: function() {
            alert("failed");
        }
    });
    
   
  
  
  
   $.ajax({

        method: 'get',
        url: baseUrl+"/getDashboard?orgid="+{{orgid}},
        success: function(response) {
         var a=response.data;
         var htm="";
		for(var i in a){
		 htm+="<div id='"+a[i].indicator+"'></div>";
		
		// $("#slideshow").html(htm);
			console.log(a[i].fys);
			if(a[i].chart_type=="Line Chart"){
			
			Highcharts.chart(a[i].indicator, {
    chart: {
        type: 'line',
        height: '550px',      
    },
    title: {
        text: a[i].inamenp
    },
    subtitle: {
        text: a[i].inameen
    },
    xAxis: {
        categories: months,
        crosshair: true
    },
    yAxis: {
        title: {
            text: 'Value'
        }
    },
    plotOptions: {
        line: {
            dataLabels: {
                enabled: true
            },
            enableMouseTracking: false
        }
    },
    series: [{
        name:a[i].inamenp +" "+ a[i].fys,
        data: a[i].data.map(Number)
    }]
});
			}
			
			if(a[i].chart_type=="Pie Chart"){
			var ind=a[i].indicator;
			var nam=a[i].inamenp;
			var series = [{
                    name: "Total",
                    data: []
                }];
			var piedata=a[i].data.map(Number);
			for(var p in piedata){
				var pies = {name:months[p],y:piedata[p]};
				
				series[0].data.push(pies);
			}
			
			Highcharts.chart(ind, {
    chart: {
       type: 'pie',
        options3d: {
            enabled: true,
            alpha: 45,
            beta: 0
        }
    },
    title: {
        text: nam
    },
    subtitle: {
        text: a[i].inameen+"("+a[i].fys+")"
    },
    tooltip: {
        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
    },
    accessibility: {
        point: {
            valueSuffix: '%'
        }
    },
    plotOptions: {
        pie: {
            allowPointSelect: true,
            cursor: 'pointer',
             depth: 35,
            dataLabels: {
                enabled: true,
                format: '<b>{point.name}</b>: {point.percentage:.1f} %'
            }
        }
    },
    series: series
});
			
			}
			
			
			if(a[i].chart_type=="Bar Chart"){
			
			Highcharts.chart(a[i].indicator, {
    chart: {
        type: 'column',
        height: '500px',
        options3d: {
            enabled: true,
            alpha: 0,
            beta: 0,
            depth: 70
        }
        
    },
    title: {
        text: a[i].inamenp
    },
    subtitle: {
        text: a[i].inameen
    },
    xAxis: {
        categories: months,
        crosshair: true,
        labels: {
            skew3d: true,
            style: {
                fontSize: '16px'
            }
        }
    },
    yAxis: {
        min: 0,
        title: {
            text: 'Value'
        }
    },
    tooltip: {
        headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
        pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
            '<td style="padding:0"><b>{point.y:.1f} mm</b></td></tr>',
        footerFormat: '</table>',
        shared: true,
        useHTML: true
    },
   plotOptions: {
                                    line: {
                                      dataLabels: {
                                        enabled: true
                                      },
                                      enableMouseTracking: true
                                    },
                                    column: {
                                     depth: 50,
                                      dataLabels: {
                                        enabled: true
                                      },
                                      enableMouseTracking: true
                                    },
                                    bar: {
                                      dataLabels: {
                                        enabled: true
                                      },
                                      enableMouseTracking: true
                                    },
                                    areaspline: {
                                      dataLabels: {
                                        enabled: true
                                      },
                                      enableMouseTracking: true
                                    }

                                  },
    series: [{
        name: a[i].inamenp +" "+ a[i].fys,
        data: a[i].data.map(Number)

    }]
});



			
  }
		}
        },
        fail: function() {
            alert("failed");
        }
    });
    
     setInterval(function() {
                 
       var purl = '{{baseUrl}}';
	var xh = $.ajax({
			url:purl,
			method:'get',
			
		});
	xh.done(()=>{ window.location.reload();});
                }, 900000); 

function logOpen(){
	var purl = '{{baseUrl}}/log/dashboard';
	var xh = $.ajax({
			url:purl,
			method:'post',
			data:{orgid:'{{orgid}}'}
		});
	xh.done(()=>{/*logged*/});
}
logOpen();
setInterval(()=>{
	logOpen();
}, 1500000);

</script>


</html>
